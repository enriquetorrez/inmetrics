# See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

# Stage 1: Build the application
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src
# Copy the project files
COPY ["src/InMetrics.TransactionManagement.API/InMetrics.TransactionManagement.API.csproj", "InMetrics.TransactionManagement.API/"]
COPY ["src/InMetrics.Models/InMetrics.Models.csproj", "InMetrics.Models/"]
COPY ["src/InMetrics.BusinessRules/InMetrics.BusinessRules.csproj", "InMetrics.BusinessRules/"]
RUN ls -la
# Restore dependencies
RUN dotnet restore "InMetrics.TransactionManagement.API/InMetrics.TransactionManagement.API.csproj"

# Copy the remaining files and build the application
COPY . .
WORKDIR "src/InMetrics.TransactionManagement.API"
RUN ls -la
RUN dotnet build "InMetrics.TransactionManagement.API.csproj" -c Release -o /app/build

# Stage 2: Publish the application
FROM build AS publish
RUN dotnet publish "InMetrics.TransactionManagement.API.csproj" -c Release -o /app/publish

# Stage 3: Create the final image
FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS final
WORKDIR /app

# Copy the published application
COPY --from=publish /app/publish .

# Expose ports
EXPOSE 80
EXPOSE 443

# Set the entry point for the application
ENTRYPOINT ["dotnet", "InMetrics.TransactionManagement.API.dll"]
